{
  "api": {
    "all": {
      "events": {
        "validation": "Trigger internal validation."
      },
      "props": {
        "tag": "Replaces html with provided value. This is useful for semantics and also to allow for valid markup in some cases (`ul > li` and `tr > td` etc.)."
      }
    },
    "VaForm": {
      "props": {
        "autofocus": "Focus on first form-component <!-- TODO Add link --> on render"
      },
      "events": {
        "validation": "Triggered on validation update"
      },
      "methods": {
        "validate": "Performs validation and updates error state for each form component. Works with nested forms.",
        "focus": "Focus on first focusable form-component in the form.",
        "focusInvalid": "Focus on first focusable invalid form-component in the form. This is useful for longer forms and allows to bring user attention to invalid field.",
        "resetValidation": "Reset validation for all validateable <!-- TODO Add link --> form-components.",
        "reset": "Reset values and validation state for all form-components"
      }
    },
    "VaSlider": {
      "props": {
        "range": "Transforms single value slider into range slider.",
        "value": "Numeric value(s) of slider.",
        "trackLabel": "Label of slider track.",
        "color": "Color of slider.",
        "trackColor": "Color of slider base track.",
        "labelColor": "Color of slider label.",
        "trackLabelVisible": "Toggles track label visibility.",
        "min": "Minimum value.",
        "max": "Maximum value.",
        "step": "Slider value step.",
        "label": "Slider label",
        "invertLabel": "Moves label to opposite side.",
        "disabled": "Disables slider.",
        "readonly": "Makes slider read only.",
        "pins": "Adds step marks to a slider track.",
        "iconPrepend": "Icon at the start of slider.",
        "iconAppend": "Icon at the end of slider.",
        "vertical": "Makes slider vertical.",
        "showTrack": "Toggles track display."
      },
      "events": {
        "dragStart": "Emited on drag start.",
        "dragEnd": "Emited on drag end.",
        "change": "Emited on value input.",
        "input": "Emited on value change."
      },
      "slots": {
        "append": "Slot for input after slider.",
        "prepend": "Slot for input before slider.",
        "label": "Replaces the default label."
      }
    },
    "VaAffix": {
      "props": {
        "offsetTop": "Distance from the top of target element to the top of affixed element.",
        "offsetBottom": "Distance from the bottom of target element to the bottom of affixed element.",
        "target": "The element relative to which the component is fixed."
      },
      "events": {
        "change": "Emits affixed state on its' change."
      }
    }
  },
  "menu": {
    "affix": "Affix",
    "auth": "Auth",
    "rating": "Rating",
    "buttons": "Buttons",
    "charts": "Charts",
    "colorPickers": "Color Pickers",
    "collapses": "Collapses",
    "timelines": "Timelines",
    "dashboard": "Dashboard",
    "formElements": "Form Elements",
    "forms": "Forms",
    "mediumEditor": "Medium Editor",
    "grid": "Grid",
    "icons": "Icons",
    "cards": "Cards",
    "spinners": "Spinners",
    "login": "Login",
    "maps": "Maps",
    "pages": "Pages",
    "modals": "Modals",
    "notifications": "Notifications",
    "progressBars": "Progress Bars",
    "signUp": "Sign up",
    "statistics": "Statistics",
    "lists": "Lists",
    "tables": "Tables",
    "markupTables": "Markup Tables",
    "dataTables": "Data Tables",
    "chips": "Chips",
    "tabs": "Tabs",
    "typography": "Typography",
    "uiElements": "UI Elements",
    "treeView": "Tree view",
    "dateTimePickers": "Date time pickers",
    "fileUpload": "File Upload",
    "colors": "Colors",
    "spacing": "Spacing",
    "sliders": "Sliders",
    "popovers": "Popovers",
    "chat": "Chat"
  },
  "language": {
    "brazilian_portuguese": "PortuguÃªs",
    "english": "English",
    "spanish": "Spanish",
    "simplified_chinese": "Simplified Chinese"
  },
  "affix": {
    "title": "Affix",
    "paragraph": "Affix component is created to fix any content in proper position relative to container.",
    "demo": {
      "subtitle": "Demo",
      "top": {
        "headline": "Fixed at the top."
      },
      "bottom": {
        "headline": "Fixed at them bottom."
      },
      "target": {
        "headline": "Fixes element relative to custom container."
      }
    },
    "api": {
      "subtitle": "API",
      "paragraph": "Here are props and events that are used in va-affix component."
    },
    "faq": {
      "subtitle": "FAQ",
      "questions": [
        {
          "headline": "Frequently asked question one",
          "paragraph": "Answer one and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question two",
          "paragraph": "Answer two and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question three",
          "paragraph": "Answer three and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question four",
          "paragraph": "Answer four and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        }
      ]
    }
  },
  "slider": {
    "title": "Slider",
    "paragraph": "Slider component is a visualization for number input. User can drag slider within a fixed range to get required value.",
    "basic": {
      "subtitle": "Basic Element",
      "paragraph": "This is basic usage of slider component."
    },
    "advanced": {
      "subtitle": "Advanced Element",
      "color": {
        "headline": "Color",
        "paragraph": "You can customize color of slider."
      },
      "minmax": {
        "headline": "Minimum and maximum values",
        "paragraph": "You can set a range between min and max values"
      },
      "state": {
        "headline": "State",
        "paragraph": "Slider can be in disabled or readonly state."
      },
      "range": {
        "headline": "Range slider",
        "paragraph": "You can set a range of values."
      },
      "step": {
        "headline": "Step",
        "paragraph": "Step can be changed."
      },
      "pins": {
        "headline": "Pins",
        "paragraph": "Display markers on slider track"
      },
      "label": {
        "headline": "Label",
        "paragraph": "Label of slider, could have inverted position or custom color."
      },
      "slots": {
        "headline": "Slots",
        "paragraph": "You can add inputs before and after the slider using 'append' or 'prepend' slot name. Also default label can be replaced using 'label' slot."
      },
      "icon": {
        "headline": "Icon",
        "paragraph": "You can inser icon at the start or end of slider."
      },
      "track": {
        "headline": "Track",
        "paragraph": "Track color can be hidden or have custom color."
      },
      "trackLabel": {
        "headline": "Track label",
        "paragraph": "You can show track label and overwrite it's view."
      },
      "vertical": {
        "headline": "Vertical",
        "paragraph": "Vertical state of slider."
      }
    },
    "api": {
      "subtitle": "API",
      "paragraph": "Here are props, events and slots that are used in va-slider component."
    },
    "faq": {
      "subtitle": "FAQ",
      "questions": [
        {
          "headline": "Frequently asked question one",
          "paragraph": "Answer one and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question two",
          "paragraph": "Answer two and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question three",
          "paragraph": "Answer three and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        },
        {
          "headline": "Frequently asked question four",
          "paragraph": "Answer four and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text and more text"
        }
      ]
    }
  }
}
